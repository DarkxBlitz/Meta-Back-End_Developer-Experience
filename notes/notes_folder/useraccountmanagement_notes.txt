Solution for models.py

from django.db import models
from django.contrib.auth.models import User

class Rating(models.Model):
user = models.ForeignKey(User, on_delete=models.CASCADE)
menuitem_id =  models.SmallIntegerField()
rating = models.SmallIntegerField()


Solution for admin.py

from django.contrib import admin
from .models import Rating

# Register your models here.
admin.site.register(Rating)

Solution for urls.py (App-level)


from django.urls import path
from . import views

urlpatterns = [
path('ratings', views.RatingsView.as_view()),
]

Solution for views.py

from rest_framework import generics
from rest_framework.permissions import IsAuthenticated
from .models import Rating
from .serializers import RatingSerializer

class RatingsView(generics.ListCreateAPIView):
queryset = Rating.objects.all()
serializer_class = RatingSerializer

def get_permissions(self):
    if(self.request.method=='GET'):
        return []

    return [IsAuthenticated()]


Solution for serializers.py

from rest_framework import serializers
from .models import Rating
from rest_framework.validators import UniqueTogetherValidator
from django.contrib.auth.models import User

class RatingSerializer (serializers.ModelSerializer):
user = serializers.PrimaryKeyRelatedField(
        queryset=User.objects.all(),
        default=serializers.CurrentUserDefault()
)

class Meta:
    model = Rating
    fields = ['user', 'menuitem_id', 'rating']

validators = [
    UniqueTogetherValidator(
        queryset=Rating.objects.all(),
        fields=['user', 'menuitem_id']
    )
]

extra_kwargs = {
    'rating': {'min_value': 0, 'max_value':5},
}



Relevant solution for settings.py

REST_FRAMEWORK = {
'DEFAULT_AUTHENTICATION_CLASSES': (
    'rest_framework.authentication.TokenAuthentication',
    'rest_framework.authentication.SessionAuthentication',
),
}

